package Graphic;

import Graphic.Visualization.AntGraphicSingle;
import Logic.Ant.SquareAnt;
import Logic.RuleGenerator.SquareRulesGenerator;
import Logic.Rule.SquareRule;
import Utils.Settings;

import javax.imageio.ImageIO;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;

public class ImageGenerator {
    private SquareAnt squareAnt;

    /**
     * Cycles through all rules of length Settings.RULES_LENGTH and saves images into file.
     */
    public void drawAllRules() {
        SquareRulesGenerator squareRulesGenerator = new SquareRulesGenerator(Settings.RULES_LENGTH);
        while (squareRulesGenerator.hasNext()) {
            SquareRule squareRule = squareRulesGenerator.next();
            System.out.println("working on: " + squareRule);
            squareAnt = new SquareAnt(squareRule);
            saveImageWithoutPanel(squareRule);
        }
    }

    /**
     * Saves image generated by ant running given rule. Creates image from grid and saves it directly into file.
     *
     * @param squareRule that ant is running
     */
    private void saveImageWithoutPanel(SquareRule squareRule) {
        squareAnt.allMoves();
        BufferedImage bImg = new BufferedImage(Settings.GRID_WIDTH, Settings.BACKGROUND_HEIGHT, BufferedImage.TYPE_INT_RGB);
        AntGraphicSingle antGraphicSingle = new AntGraphicSingle();
        antGraphicSingle.drawImage(bImg.createGraphics());

        try {
            ImageIO.write(bImg, "png", new File(String.format(Settings.IMAGE_BASE_PATH + "/%d/%s.png", squareRule.rule.length(), squareRule)));
        } catch (IOException e) {
            e.printStackTrace();
        }
    }
}
