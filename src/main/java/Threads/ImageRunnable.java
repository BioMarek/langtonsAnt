package Threads;

import Logic.Ant;
import Logic.AntGraphic;
import Utils.Settings;

import javax.imageio.ImageIO;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.util.List;

/**
 * Evaluates rules supplied to constructor and saves result as image.
 */
public class ImageRunnable implements Runnable {

    private final List<String> rules;

    public ImageRunnable(List<String> rules) {
        this.rules = rules;
    }

    @Override
    public void run() {
        for (String rule : rules) {
            saveImage(rule);
        }
    }

    /**
     * Saves image generated by ant running given rule. Creates image from grid and saves it directly into file.
     *
     * @param rule that ant is running
     */
    private void saveImage(String rule) {
        System.out.println(Thread.currentThread().getName() + " working on: " + rule);

        Ant ant = new Ant(rule);
        AntGraphic antGraphic = new AntGraphic(ant);
        ant.allMoves();
        if (ant.usedTopColor) {
            BufferedImage bImg = new BufferedImage(Settings.SIZE_IN_PIXELS, Settings.SIZE_IN_PIXELS, BufferedImage.TYPE_INT_RGB);
            antGraphic.drawImage(bImg.createGraphics());

            try {
                ImageIO.write(bImg, "png", new File(String.format(Settings.BASE_PATH + "/%d/%s.png", rule.length(), rule)));
            } catch (IOException e) {
                e.printStackTrace();
            }
        } else
            System.out.println("--- not saving: " + rule);
    }
}
