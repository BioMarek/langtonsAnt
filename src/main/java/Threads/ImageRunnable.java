//package Threads;
//
//import Graphic.Visualization.AntGraphicSingle;
//import Logic.SquareAnt;
//import Utils.Rule;
//import Utils.SquareRule;
//import Utils.Settings;
//
//import javax.imageio.ImageIO;
//import java.awt.image.BufferedImage;
//import java.io.File;
//import java.io.IOException;
//import java.util.List;
//
///**
// * Evaluates rules supplied to constructor and saves result as image.
// */
//public class ImageRunnable implements Runnable {
//    private final List<Rule> squareRules;
//
//    public ImageRunnable(List<Rule> squareRules) {
//        this.squareRules = squareRules;
//    }
//
//    @Override
//    public void run() {
//        for (Rule squareRule : squareRules) {
//            saveImage(squareRule);
//        }
//    }
//
//    /**
//     * Saves image generated by ant running given rule. Creates image from grid and saves it directly into file. Saves
//     * only images that used all colors i.e. weren't generated previously.
//     *
//     * @param squareRule that ant is running
//     */
//    private void saveImage(SquareRule squareRule) {
//        System.out.println(Thread.currentThread().getName() + " working on: " + squareRule);
//
//        SquareAnt squareAnt = new SquareAnt(squareRule);
//        AntGraphicSingle antGraphicSingle = new AntGraphicSingle(squareAnt);
//        squareAnt.allMoves();
//        if (squareAnt.usedTopColor) {
//            BufferedImage bImg = new BufferedImage(Settings.GRID_WIDTH, Settings.BACKGROUND_HEIGHT, BufferedImage.TYPE_INT_RGB);
//            antGraphicSingle.drawImage(bImg.createGraphics());
//
//            try {
//                ImageIO.write(bImg, "png", new File(String.format(Settings.IMAGE_BASE_PATH + "/%d/%s.png", squareRule.rule.length(), squareRule.rule)));
//            } catch (IOException e) {
//                e.printStackTrace();
//            }
//        } else
//            System.out.println("--- not saving: " + squareRule);
//    }
//}
